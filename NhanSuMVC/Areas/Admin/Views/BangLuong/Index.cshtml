@model List<NhanSuMVC.Models.ViewModels.LuongVM>

@{
    ViewData["Title"] = "Tính Lương";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int currentMonth = DateTime.Now.Month;
    
}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">

        <li class="breadcrumb-item">
            <a>Tính lương</a>
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "BangLuong", new { area = "Admin" })">Tính lương</a>
        </li>

    </ol>
</nav>
<div class='card p-4' style="max-width: 100%; overflow-x: auto;">
    <h1>Tính Lương</h1>

    <form id="salaryForm" method="post" class="d-flex flex-column">
        <div class="form-group mb-3 d-flex align-items-center justify-content-between">
            <div class="d-flex align-items-center">
                <!-- Dropdown chọn tháng -->
                <label for="monthDropdown" class="font-weight-bold mr-2">Chọn Tháng:</label>
                <select id="monthDropdown" name="month" class="form-select d-inline-block mx-2" style="width: auto;">
                    @for (int month = 1; month <= currentMonth; month++)
                    {
                        <option value="@month" @(month == ViewBag.SelectedMonth ? "selected" : "")>@month</option>
                    }
                </select>

                <!-- Dropdown chọn năm -->
                <label for="yearDropdown" class="font-weight-bold mx-2">Chọn Năm:</label>
                <select id="yearDropdown" name="year" class="form-select d-inline-block mx-2" style="width: auto;">
                    @for (int year = DateTime.Now.Year - 5; year <= DateTime.Now.Year; year++)
                    {
                        <option value="@year" @(year == ViewBag.SelectedYear ? "selected" : "")>@year</option>
                    }
                </select>

                <!-- Nút tính lương -->
                <button type="button" id="btnCalculateSalary" class="btn btn-primary mx-1">Tính Lương</button>
            </div>


            <!-- Nhóm nút Lưu và Xuất Excel -->
            <div class="d-flex">
                <button type="button" id="btnSaveSalary" class="btn btn-primary me-2">Lưu</button>
                <button type="button" id="btnExportExcel" class="btn btn-secondary">Xuất Excel</button>
            </div>
        </div>
    </form>

    <div id="salaryTable" class="table-responsive" style="margin-top: 20px;" data-mdb-fixed-header="true">
        
    </div>


</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {


            // Tính lương khi nhấn nút Tính Lương
            $('#btnCalculateSalary').click(function () {
                var month = $('#monthDropdown').val();
                var year = $('#yearDropdown').val();

                // Gửi yêu cầu POST để tính lương và nhận dữ liệu Partial View
                $.get('@Url.Action("TinhLuong", "BangLuong")', { month: month, year: year }, function (data) {
                    // Cập nhật nội dung của #salaryTable bằng dữ liệu nhận được từ Partial View
                    $('#salaryTable').html(data);
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    console.error("Error calculating salary: " + textStatus + " " + errorThrown);
                    alert("Có lỗi khi tính lương.");
                });
            });
            
            // Xuất Excel khi nhấn nút Xuất Excel
            $('#btnExportExcel').click(function () {
                var month = $('#monthDropdown').val();
                var year = $('#yearDropdown').val();

                // Redirect to export Excel action
                window.location.href = '@Url.Action("ExportExcel", "BangLuong")?month=' + month + '&year=' + year;
            });

            // Lưu bảng lương khi nhấn nút Lưu bảng lương
            $('#btnSaveSalary').click(function (event) {
                event.preventDefault(); // Ngăn form không gửi yêu cầu mặc định

                // Lấy tháng và năm được chọn
                var thang = parseInt($('#monthDropdown').val());
                var nam = parseInt($('#yearDropdown').val());


                // Lấy dữ liệu từ bảng
                let data = [];
                $("#salaryTable tbody tr").each(function () {
                    let row = $(this);
                    let maNV = row.find("td:eq(1)").text();
                    let luongCB = parseDecimal(row.find("td:eq(3)").text());
                    let tongPhuCap = parseDecimal(row.find("td:eq(9)").text());
                    let tongThuong = parseDecimal(row.find("td:eq(14)").text());
                    let tongThuNhap = parseDecimal(row.find("td:eq(27)").text());
                    let tongPhat = parseDecimal(row.find("td:eq(15)").text());
                    let bhxhNLD = parseDecimal(row.find("td:eq(16)").text());
                    let bhytNLD = parseDecimal(row.find("td:eq(17)").text());
                    let bhtnNLD = parseDecimal(row.find("td:eq(18)").text());
                    let bhxhDN = parseDecimal(row.find("td:eq(20)").text());
                    let bhytDN = parseDecimal(row.find("td:eq(21)").text());
                    let bhtnDN = parseDecimal(row.find("td:eq(22)").text());
                    let tongTienTC = parseDecimal(row.find("td:eq(13)").text());
                    let thueTNCN = parseDecimal(row.find("td:eq(25)").text());
                    let tongTU = parseDecimal(row.find("td:eq(26)").text());
                    let luongThucLanh = parseDecimal(row.find("td:eq(28)").text());

                    // Push từng dòng dữ liệu vào mảng
                    data.push({
                        MaNV: maNV,
                        Thang: thang,
                        Nam: nam,
                        LuongCB: luongCB,
                        TongPhuCap: tongPhuCap,
                        TongThuong: tongThuong,
                        TongThuNhap: tongThuNhap,
                        TongPhat: tongPhat,
                        BHXH_NLD: bhxhNLD,
                        BHYT_NLD: bhytNLD,
                        BHTN_NLD: bhtnNLD,
                        BHXH_DN: bhxhDN,
                        BHYT_DN: bhytDN,
                        BHTN_DN: bhtnDN,
                        TongTienTC: tongTienTC,
                        ThueTNCN: thueTNCN,
                        TongTU: tongTU,
                        LuongThucLanh: luongThucLanh
                    });
                });
                console.log("Dữ liệu gửi đi:", {
                    bangLuong: data,
                    month: thang,
                    year: nam
                });



                $.ajax({
                    url: `/Admin/BangLuong/LuuLuong?month=${thang}&year=${nam}`,
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(data), // Chỉ truyền data (danh sách bảng lương)
                    success: function (response) {
                        alert(response);
                    },
                    error: function (xhr) {
                        console.error("Lỗi khi lưu bảng lương:", xhr.responseText);
                        alert("Có lỗi xảy ra: " + xhr.responseText);
                    }
                });


            });


        });
        function parseDecimal(value) {
            // Xóa dấu phẩy, thay thế dấu chấm thành dấu phân cách thập phân
            value = value.replace(/,/g, '');
            if (isNaN(value) || value === "") return 0;
            return parseFloat(value);
        }
    </script>
}

<style>

    .card {
        width: 1220px; /* Đảm bảo card chiếm toàn bộ chiều rộng của phần chứa */
        max-width: 1500px; /* Cố định chiều rộng tối đa cho card */
        overflow-y: auto; /* Cho phép cuộn dọc nếu nội dung vượt quá chiều cao */
        margin: 0 auto; /* Căn giữa thẻ card trong phần chứa */
        box-sizing: border-box; /* Đảm bảo padding và border không làm thay đổi chiều rộng */
    }



    #salaryTable {
        width: 100%; /* Đảm bảo bảng chiếm hết chiều rộng của phần chứa */
        max-width: 100%; /* Đảm bảo bảng không vượt quá chiều rộng của card */
        overflow-x: auto; /* Cuộn ngang nếu bảng quá rộng */
        white-space: nowrap; /* Giữ nội dung trong các ô không bị xuống dòng */
        display: block; /* Cho phép cuộn ngang trong phần bảng */
    }

    table {
        width: 100%; /* Đảm bảo bảng chiếm hết chiều rộng */
        border-collapse: collapse; /* Cố định biên giữa các ô */
    }

    th, td {
        padding: 10px;
        text-align: center;
        border: 1px solid #ddd;
        white-space: nowrap; /* Giữ nội dung trong ô không bị xuống dòng */
    }

</style>